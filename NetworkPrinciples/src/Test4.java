public class Test4 {

    //TCP/IP 是最重要的协议
    //IP：完成两方面工作：1、地址管理 2、路由管理

    //1、地址管理

    //IP 协议能够规划出两点之间一条比较合适的路径：和 TOS 密切相关，因为 TOS 可以任意切换形态。
    // 日常开发的时候，很少关注 TOS
    //单个 IP 数据报，不能超过 64k，如果要构造一个更长的数据报，那就使用 分包和组包，IP 协议自身已经实现了
    // 拆成多个包，每个包的长度都不超过 64k
    //对于 IP 数据包来说：根本不关心载荷里面是啥，只是单纯的对数据进行切分了。组包的时候，多个被拆出的数据包，
    // 16位标识是相同的，通过 16 位标识来组包，组包位置通过 13位 片偏移来描述这些包谁先谁后。
    //3位标志：三位中只有一位是好使的，如果标志是 1，那么就说明是最后一个包了。
    //如何基于 UDP 实现分包组包：照抄 IP 的作业就好了。
    //接收缓冲区，可以访问上面的任意元素。
    //8位生存时间：表示一个 IP 数据报，在网络上还能存在多久。这里的单位不是 s，不是 ms，而是转发次数，
    // IP 数据报发送的时候，会有一个初始的 TTL（常见的值是 128，或者 64） IP 数据报每次经过了一个路由器，TTL 就会 -1
    // 如果 TTL 减到 0 了，此时收到这个包的路由器就会把这个包丢掉。
    //8位协议：表示传输层使用的是哪种协议，TCP 或者是 UDP 都有不同的取值。
    //16位首部校验和：也是用来校验数据是否正确。
    //32位源IP：发件人地址，对于 IPV4 来说，一个 IP 地址本质上是 32位 的整数，通常会使用 点分十进制 来表示 IP地址
    // 也就是 三个点 . 把 32 位整数分为 4 个部分，每个部分 1 个字节，每个部分的取值就是 0-255 我们看的是 点分十进制
    // 在底层仍然是按照 4 个字节整数来表示
    //32位目的IP：收件人地址。

    //IP 地址的相关情况：咱们把 IP 地址分成了两部分：网络号+主机号
    // 网络号：描述当前的网段信息（局域网的标识）。通过引入 子网掩码 这样的概念来表示多少个 bit 位是网络号。
    //  子网掩码的左边都是 1，右边都是 0。前面的 1 就表示哪些位是 网络号，剩下的 0，就表示哪些位是主机号。
    // 主机号：区分了局域网内部的主机。

    //VLAN：保证跨局域网之间的通信更加流畅。因为一般不同局域网不能直接进行通讯，所以通过 VLAN 来实现访问内网。
    // 可以根据实际需要来确定网段如何划分（每个设备的 IP 都是可配置的，包括子网掩码之类的，都是可以修改的（网管负责）

    //IP地址当中，还存在特殊的 IP，如果主机号全是 0，那么该 IP 就表示网络号（局域网里的正常设备，主机号不能为 0）
    //如果 IP 的主机号全是 1，该 IP 就表示”广播地址“，往这个广播地址上发的消息，整个局域网中都能收到。
    //IP 地址是 127 开头的，就表示”环回 IP“表示主机自己（127.0.0.1：环回 IP 中的典型代表）
    //IP 地址是 10 开头，192.168 开头，172.16-172.31 开头，就表示该 IP 地址是一个局域网内部的 IP（内网 IP）
    // 除此之外，剩下的 IP 称为 外网IP（直接在广域网上使用的 IP）要求外网IP 一定是唯一的，每个外网 IP
    // 都会对应到唯一的一个设备，内网 IP 只是在当前局域网中是唯一的，不同局域网里，可以有相同的内网 ip 的设备
    //
    //IP 地址不够用怎么解决
    //1、动态IP：每个设备连上网的时候，才有 IP，不联网的时候就没 IP（这个IP就给别人用），
    // 通过 动态IP 来解决 IP地址不够用的问题。
    //2、NAT 机制，让多个设备共用一个 IP（外网IP）把网络分为 内网 和 外网。内网可以共用一个 外网的IP。
    // 也就是这里的外网 IP，会给所有接入这个运营商设备的局域网都来使用这个 外网IP。外网区分内网的数据，就是通过端口号
    // 网络的连接，是一个 五元组，即使是 IP 相同也没事。有 NAT 机制，就会隐含一个重要的结论：对于一个 外网IP 来说，
    // 可以在互联网的任意位置都能访问到，对于一个 内网IP 来说，只能在当前局域网内部访问，就是 局域网1 的设备，
    // 不能使用内网访问 局域网2 的设备。内网IP 是可以重复的，只有在局域网内才是唯一的。
    // 不同的局域网访问的话，就需要一个带有 外网IP 的机器，然后 局域网1 把数据放到 外网服务器，然后 局域网2 就可以访问到了
    // 外网服务器，就会修改 IP数据报，把内网发出的 源IP，改为 外网IP。
    // NAT 也是存在极限的，端口号个数是 65535，如果一个局域网内的连接数超过了 65535，这时候 NAT 就不一定好使了，
    // 因为端口号不够用了。NAT 相当于是续命了，并不是从根本解决
    //3、IPV6：报头中使用了更长的字段来表示 IP地址，16个字节，128位，之前是 4个字节，32位。IPV6 很多很多，
    // 号称可以给啥子都分配 IP地址，从根本上解决了 IP地址不够用的问题。
    // IPV6 很好用，为什么还在用 IPV4+NAT：因为最大的问题，在于 IPV6 和IPV4 不兼容。对于一个设备来说，
    // 支持 IPV4 和 IPV6 需要两截然不同的机制。现有的大量网络设备（路由器...）很可能只支持 IPV4，不支持 IPV6
    // IP地址的划分，是通过 子网掩码 划分的，在子网掩码之前，是通过 ”分类” 的方式来划分的，把 IP 地址分成了 ABCDE
    // 这五类，每一类分别都有几位是 网络号，几位是 主机号。


    //2、路由选择：也就是规划路径，当两个设备之间，要找出一条通道，能够完成传输的过程。前提是，得认识路。
    // IP协议路由选择：IP数据报 中的目的地址，就表示了这个包要发送到那里去，如果路由器认识目的地址，就会告诉路，
    // 如果不认识路，就告诉大概方向，走到下一个路由器的时候继续问，依次往后走，也就是离目标越来越近，最后就可以找到这个地址了
    // 找到地址就把数据发过去了。有的时候，不光遇到认识地址的路由器，而且还认识很多路，就可以选择合适的路了。
    // 啥叫路由器认识这个 IP地址：在路由器内部维护了一个数据结构（路由表），记录了一些网段信息（网络号）
    // 以及每个网络号对于的网络接口。

    //数据链路层：数据链路层主要的协议，叫做：以太网。每个网卡，都有 mac地址，是唯一的，在网卡出厂的时候就写死了。
    // mac地址，表示传输过程中相邻两个设备的关系。以太网数据帧的末尾会有 CRC算法的校验和：循环冗余算法。
    // MTU：一个以太网数据帧能够承载的数据范围，这个范围取决于硬件设备。以太网和硬件也是密切相关的，不同的硬件设备，
    //  对应的 数据链路层协议，可能又不一样，MTU 也不相同。MTU 对IP 的影响；主要影响就是分包的过程。
    //MSS：TCP 中在 IP 不分包的前提下，最多搭配多少载荷：一方面取决于 MTU。另一方面取决于 TCP 和 IP 的报头。
    // 当 TCP 传输的数据长度不高于 MSS 的时候，是处于最高效的状态。ARP 报文并不是用来传输数据的，只是起到一个辅助的效果。
    // 路由器拿到一个 IP地址（目的IP），通过 IP地址，来决定接下来这个数据咋走（从哪个端口出去，发到哪个设备上），
    // 所有就得决定，接下来封装的以太网数据帧，目的 mac 是啥，需要根据 ARP协议，建立起 IP->mac 这样的映射关系
    // 当设备启动的时候，就会向局域网当中，广播 ARP报文，每个设备收到的时候，都会做一个应答。应答信息中就包含了自己的 IP
    // 和 mac，发起广播的那一方，就可以根据这些回应，建立起这个映射表了。

    //一些特殊协议的补充：DNS（应用层协议），是域名解析。IP 地址不好记，即使写成了， 点分十进制，仍然不好记。
    // 所以就可以使用一串英文单词来表示这个 ip地址，这串英文单词，就叫做域名。域名和 IP地址 之间是一一对应的关系。
    // DNS 系统，最开始的时候，只是一个普通文件，称为 hosts 文件。现在 hosts 文件已经不使用了，因为域名太多了，
    // 于是有了一个机构，专门负责处理这些 域名 和 IP 的对应关系。如果想要对域名进行解析的话，
    // 就访问一下这个服务器（域名解析服务器）就好了，每个城市都会有镜像服务器，我们一般都是在访问镜像服务器。

    //当我们的主机，查询了 DNS 之后，主机就会把这个查询结果缓存一定的时间（浏览器来进行缓存）下次再访问到同一个域名的时候，
    // 就可以省略查询 DNS 的过程了。
    //
}
