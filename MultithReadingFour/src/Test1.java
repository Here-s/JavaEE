public class Test1 {

    //通过 线程池和协程 来进一步加快速度：
    // Runnable 描述一个任务
    // 阻塞队列组织若干任务
    // 创建一个 worker 类，描述一个工作线程，完成的任务就是从阻塞队列中获取元素，并执行任务
    // 创建一个 List 来组织若干个线程对象。
    // 实现一个 submit 方法，把任务给提交到队列当中。

    //多个线程尝试对同一个对象加锁的时候 才会出现锁竞争，才会出现阻塞等待，
    // 多个线程在针对不同的对象加锁，多个线程在针对不同的对象加锁，此时就不会设计阻塞等待

    //实际开发当中，可能有很多很多线程，有些线程之间，是需要互斥的，有些之间是不需要互斥的
    // 哪些线程在针对同一个对象加锁，就是有互斥关系。没有针对同一个对象加锁，就没有互斥关系。
    //锁对象出了能体现到互斥的效果，同时还能体现到：等待-通知 这样的效果。一个代码里面，可能有很多很多线程


}
