public class Test5 {

    //线程的状态
    // 1、NEW 就是 Thread 对象有了，内核中的线程还没有
    // 2、TERMINATED 内核中的线程没了，Thread 对象还在。
    // 3、RUNNABLE 就绪状态
    // 4、TIMED_WAITING  因为 sleep 进入了阻塞状态
    // 5、BLOCKED 是因为等待锁进入了阻塞状态
    // 6、WAITING 因为 wait 进入了阻塞状态

    //线程安全：重点，难点，考点
    // 在多线程的调度下，导致出现了一些随机性，随机性使代码中出现了一些 bug 所以导致线程不安全

    //造成线程不安全的原因：
    // 1、抢占式执行，调度过程随机。 没办法
    // 2、多个线程同时修改同一个变量。 适当调整代码结构来优化
    // 3、针对变量的操作，不是原子的。count++ 本质上是三个指令。 给它加锁就好了。synchronized
    // 4、内存可见性：一个线程频繁读，一个线程写。  通过 volatile 来调整
    // 5、指令重排序。 也可以通过 synchronized 来解决
}
